/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ql_xe;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.Shape;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.RoundRectangle2D;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import dao.Motobike_DAO;
import dao.Warranty_DAO;
import entity.Customer;
import entity.Motobike;
import entity.Warranty;

/**
 *
 * @author Admin
 */
public class WarrantyGUI extends javax.swing.JPanel implements MouseListener{

    /**
     * Creates new form ..
     * @throws SQLException 
     */
    public WarrantyGUI() throws SQLException {
        initComponents();
        loadData();        
        disableTextField();
                
                
                
                
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        Header = new javax.swing.JPanel();
        panelWarranty = new javax.swing.JPanel();
        txtWarranty = new RoundJTextField(30);
        labelCustomerID = new javax.swing.JLabel();
        panelContract = new javax.swing.JPanel();
        txtContract = new RoundJTextField(30);
        labelContract = new javax.swing.JLabel();
        panelMotobikeID = new javax.swing.JPanel();
        txtMotobikeID = new RoundJTextField(30);
        labelMotobikeID = new javax.swing.JLabel();
        panelEmployee = new javax.swing.JPanel();
        txtEmployee = new RoundJTextField(30);
        labelEmployee = new javax.swing.JLabel();
        panelWarrantyDate = new javax.swing.JPanel();
        txtWarrantyDate = new RoundJTextField(30);
        labelWarrantyDate = new javax.swing.JLabel();
        panelPartName = new javax.swing.JPanel();
        txtPartName = new RoundJTextField(30);
        labelPartName = new javax.swing.JLabel();
        panelErroName = new javax.swing.JPanel();
        labelErroName = new javax.swing.JLabel();
        txtErroName = new javax.swing.JTextArea();
        panelMoney = new javax.swing.JPanel();
        txtMoney = new RoundJTextField(30);
        labelMoney = new javax.swing.JLabel();
        buttonAdd = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonSearch = new javax.swing.JButton();
        scrollTable = new javax.swing.JScrollPane();
        table = new rojeru_san.complementos.RSTableMetro();

        setPreferredSize(new java.awt.Dimension(1580, 770));

        Main.setBackground(new java.awt.Color(255, 255, 255));
        Main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("QUẢN LÝ PHIẾU BẢO HÀNH");
        Main.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1580, 60));

        Header.setBackground(new java.awt.Color(255, 255, 255));
        Header.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thông tin ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dubai Medium", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        Header.setPreferredSize(new java.awt.Dimension(1580, 770));
        Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelWarranty.setBackground(new java.awt.Color(255, 255, 255));
        panelWarranty.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtWarranty.setBackground(new java.awt.Color(255, 255, 255));
        txtWarranty.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtWarranty.setForeground(new java.awt.Color(0, 0, 0));
        txtWarranty.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtWarranty.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtWarranty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarrantyActionPerformed(evt);
            }
        });
        panelWarranty.add(txtWarranty, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelCustomerID.setBackground(new java.awt.Color(255, 255, 255));
        labelCustomerID.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelCustomerID.setForeground(new java.awt.Color(0, 0, 0));
        labelCustomerID.setText("Mã Bảo Hành:");
        panelWarranty.add(labelCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 190, 30));

        Header.add(panelWarranty, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 480, 40));

        panelContract.setBackground(new java.awt.Color(255, 255, 255));
        panelContract.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtContract.setBackground(new java.awt.Color(255, 255, 255));
        txtContract.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtContract.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtContract.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContractActionPerformed(evt);
            }
        });
        panelContract.add(txtContract, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelContract.setBackground(new java.awt.Color(255, 255, 255));
        labelContract.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelContract.setForeground(new java.awt.Color(0, 0, 0));
        labelContract.setText("Mã Hợp Đồng:");
        panelContract.add(labelContract, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        Header.add(panelContract, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 480, 40));

        panelMotobikeID.setBackground(new java.awt.Color(255, 255, 255));
        panelMotobikeID.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMotobikeID.setBackground(new java.awt.Color(255, 255, 255));
        txtMotobikeID.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtMotobikeID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtMotobikeID.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtMotobikeID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMotobikeIDActionPerformed(evt);
            }
        });
        panelMotobikeID.add(txtMotobikeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelMotobikeID.setBackground(new java.awt.Color(255, 255, 255));
        labelMotobikeID.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelMotobikeID.setForeground(new java.awt.Color(0, 0, 0));
        labelMotobikeID.setText("Mã Xe:");
        panelMotobikeID.add(labelMotobikeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        Header.add(panelMotobikeID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 480, 40));

        panelEmployee.setBackground(new java.awt.Color(255, 255, 255));
        panelEmployee.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEmployee.setBackground(new java.awt.Color(255, 255, 255));
        txtEmployee.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtEmployee.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtEmployee.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeActionPerformed(evt);
            }
        });
        panelEmployee.add(txtEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelEmployee.setBackground(new java.awt.Color(255, 255, 255));
        labelEmployee.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelEmployee.setForeground(new java.awt.Color(0, 0, 0));
        labelEmployee.setText("Mã Nhân Viên:");
        panelEmployee.add(labelEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        Header.add(panelEmployee, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 480, 40));

        panelWarrantyDate.setBackground(new java.awt.Color(255, 255, 255));
        panelWarrantyDate.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtWarrantyDate.setBackground(new java.awt.Color(255, 255, 255));
        txtWarrantyDate.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtWarrantyDate.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtWarrantyDate.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtWarrantyDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWarrantyDateActionPerformed(evt);
            }
        });
        panelWarrantyDate.add(txtWarrantyDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelWarrantyDate.setBackground(new java.awt.Color(255, 255, 255));
        labelWarrantyDate.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelWarrantyDate.setForeground(new java.awt.Color(0, 0, 0));
        labelWarrantyDate.setText("Ngày Bảo Hành:");
        panelWarrantyDate.add(labelWarrantyDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        Header.add(panelWarrantyDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 480, 40));

        panelPartName.setBackground(new java.awt.Color(255, 255, 255));
        panelPartName.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPartName.setBackground(new java.awt.Color(255, 255, 255));
        txtPartName.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtPartName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPartName.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtPartName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartNameActionPerformed(evt);
            }
        });
        panelPartName.add(txtPartName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 270, 30));

        labelPartName.setBackground(new java.awt.Color(255, 255, 255));
        labelPartName.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelPartName.setForeground(new java.awt.Color(0, 0, 0));
        labelPartName.setText("Tên Linh Kiện:");
        panelPartName.add(labelPartName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 30));

        Header.add(panelPartName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 50, 480, 40));

        panelErroName.setBackground(new java.awt.Color(255, 255, 255));
        panelErroName.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelErroName.setBackground(new java.awt.Color(255, 255, 255));
        labelErroName.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelErroName.setForeground(new java.awt.Color(0, 0, 0));
        labelErroName.setText("Lỗi:");
        panelErroName.add(labelErroName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        txtErroName.setColumns(20);
        txtErroName.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtErroName.setRows(5);
        panelErroName.add(txtErroName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 270, 100));
        txtErroName.setLineWrap(true);

        txtErroName.setWrapStyleWord(false);

        txtErroName.setBorder(new RoundBorderArea(10));

        Header.add(panelErroName, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 480, 110));

        panelMoney.setBackground(new java.awt.Color(255, 255, 255));
        panelMoney.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMoney.setBackground(new java.awt.Color(255, 255, 255));
        txtMoney.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtMoney.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtMoney.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoneyActionPerformed(evt);
            }
        });
        panelMoney.add(txtMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 270, 30));

        labelMoney.setBackground(new java.awt.Color(255, 255, 255));
        labelMoney.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelMoney.setForeground(new java.awt.Color(0, 0, 0));
        labelMoney.setText("Số Tiền:");
        panelMoney.add(labelMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 30));

        Header.add(panelMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 200, 480, 40));

        buttonAdd.setBackground(new java.awt.Color(255, 255, 255));
        buttonAdd.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonAdd.setForeground(new java.awt.Color(0, 0, 0));
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-50 (2) (2).png"))); // NOI18N
        buttonAdd.setText("THÊM");
        buttonAdd.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonAdd.setIconTextGap(15);
        Header.add(buttonAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 40, 140, 40));
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					buttonAddActionPerformed(evt);
					txtWarranty.setText(""+(++count));
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        buttonDelete.setBackground(new java.awt.Color(255, 255, 255));
        buttonDelete.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(0, 0, 0));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-delete-20.png"))); // NOI18N
        buttonDelete.setText("XÓA RỖNG");
        buttonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonDelete.setIconTextGap(15);
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });
        Header.add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 90, 140, 40));

        buttonUpdate.setBackground(new java.awt.Color(255, 255, 255));
        buttonUpdate.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(0, 0, 0));
        buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-write-20.png"))); // NOI18N
        buttonUpdate.setText("SỬA");
        buttonUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonUpdate.setIconTextGap(15);
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					buttonUpdateActionPerformed(evt);
				} catch (NumberFormatException | SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });
        Header.add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 140, 140, 40));

        buttonSearch.setBackground(new java.awt.Color(255, 255, 255));
        buttonSearch.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonSearch.setForeground(new java.awt.Color(0, 0, 0));
        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-search-20.png"))); // NOI18N
        buttonSearch.setText("TÌM");
        buttonSearch.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonSearch.setIconTextGap(15);
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });
        Header.add(buttonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 190, 140, 40));

        Main.add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1558, 251));

        scrollTable.setBackground(new java.awt.Color(255, 255, 255));
        scrollTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setBorder(new javax.swing.border.MatteBorder(null));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ád", "ád", "ád", "ád"},
                {"áđá", "ád", "ád", "ád"},
                {"áđá", "d", "ád", "áđá"},
                {"áđá", "áđá", "áđá", "ád"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setColorBackgoundHead(new java.awt.Color(102, 102, 102));
        table.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        table.setColorBordeHead(new java.awt.Color(255, 255, 255));
        table.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        table.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        table.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        table.setColorSelBackgound(new java.awt.Color(51, 51, 51));
        table.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        table.setFuenteFilas(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        table.setFuenteHead(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        table.setGridColor(new java.awt.Color(0, 0, 0));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(255, 255, 255));
        table.setShowGrid(false);
        table.setShowVerticalLines(true);
        table.setSurrendersFocusOnKeystroke(true);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(this);
        scrollTable.setViewportView(table);
        model = new DefaultTableModel(new String[] {"Mã Bảo Hành", "Mã Hóa Đơn", "Mã Xe", "Mã Nhân Viên", "Ngày Bảo Hành", "Tên Linh Kiện", "Lỗi", "Giá Tiền"},0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        table.setModel(model);

        Main.add(scrollTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 308, 1560, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 1584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void updateData() throws SQLException {
    	model.setRowCount(0);
    	loadData();
    }
    
    public void enableTextField() {
    	txtWarranty.setEnabled(true);
    	txtContract.setEnabled(true);
    	txtEmployee.setEnabled(true);
    	txtMotobikeID.setEnabled(true);
    	txtWarrantyDate.setEnabled(true);
    	txtPartName.setEnabled(true);
    	txtErroName.setEnabled(true);
    	txtMoney.setEnabled(true);
    	
    	
    	txtWarranty.setBackground(Color.WHITE);
    	txtContract.setBackground(Color.WHITE);
    	txtEmployee.setBackground(Color.WHITE);
    	txtMotobikeID.setBackground(Color.WHITE);
    	txtWarrantyDate.setBackground(Color.WHITE);
    	txtPartName.setBackground(Color.WHITE);
    	txtErroName.setBackground(Color.WHITE);
    	txtMoney.setBackground(Color.WHITE);

    }
    
    public void disableTextField() {
    	txtWarranty.setEnabled(false);
    	txtContract.setEnabled(false);
    	txtEmployee.setEnabled(false);
    	txtMotobikeID.setEnabled(false);
    	txtWarrantyDate.setEnabled(false);
    	txtPartName.setEnabled(false);
    	txtErroName.setEnabled(false);
    	txtMoney.setEnabled(false);
    	
    	txtWarranty.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtContract.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtEmployee.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtMotobikeID.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtWarrantyDate.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtPartName.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtErroName.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    	txtMoney.setBackground(Color.getHSBColor(0f, 0f,0.79f));

    }
    
    public void deleteTextField() {
    	txtWarranty.setText("");
    	txtContract.setText("");
    	txtEmployee.setText("");
    	txtMotobikeID.setText("");
    	txtWarrantyDate.setText("");
    	txtPartName.setText("");
    	txtErroName.setText("");
    	txtMoney.setText("");
    }
    
  //METHOD !IMPORTANT
    public void loadData() throws SQLException {
    	Warranty_DAO dao = new Warranty_DAO();
    	data = dao.getAllWarranty();
    	for (Warranty w : data) {
			System.out.println(w.toString());
		}
    	loadTable();
    }
    
    public void loadTable() {
    	model.setRowCount(0);
    	table.clearSelection();
    	for (Warranty w : data) {
			model.addRow(new String[] {w.getMaBaoHanh(),
										w.getMaHopDong(),
										w.getMaXe(),
										w.getMaNhanVien(),
										String.valueOf(w.getNgayBaoHanh().format(DateTimeFormatter.ofPattern("dd-MM-yyyy"))),
										w.getTenLinhKien(),
										w.getLoiBaoHanh(),
										String.valueOf(w.getSoTien())
			});

		}
    }
    
    public boolean validData() {
    	String warID = txtWarranty.getText().trim();
    	String contractID = txtContract.getText().trim();
    	String motoID = txtMotobikeID.getText().trim();
    	String empID = txtEmployee.getText().trim();
    	String warDate = txtWarrantyDate.getText().trim();
    	String partName = txtPartName.getText().trim();
    	String errorName = txtErroName.getText().trim();
    	String price = txtMoney.getText().trim();
    	
    	Pattern pWarID = Pattern.compile("\\d+");
    	Matcher mWarID = pWarID.matcher(warID);
    	if(!(mWarID.matches())) {
    		JOptionPane.showMessageDialog(null, "Mã phiếu bảo hành phải là kí tự số");
    		return false;
    	}
    	
    	Pattern pConID = Pattern.compile("\\d+");
    	Matcher mConID = pConID.matcher(contractID);
    	if(!(mConID.matches())) {
    		JOptionPane.showMessageDialog(null, "Mã hợp đồng phải là kí tự số");
    		return false;
    	}
    	
    	Pattern pMotoID = Pattern.compile("\\d+");
    	Matcher mMotoID = pMotoID.matcher(motoID);
    	if(!(mMotoID.matches())) {
    		JOptionPane.showMessageDialog(null, "Mã xe phải là kí tự số");
    		return false;
    	}
    	
    	Pattern pEmpID = Pattern.compile("\\d+");
    	Matcher mEmpID = pEmpID.matcher(empID);
    	if(!(mEmpID.matches())) {
    		JOptionPane.showMessageDialog(null, "Mã nhân viên phải là kí tự số");
    		return false;
    	}
    	
    	try {
    		LocalDate.parse(warDate, DateTimeFormatter.ofPattern("d-M-yyyy"));
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "Ngày theo có dạng dd-MM-yyyy");
			return false;
		}
    	
    	if(partName.equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(null, "Tên linh kiện không được để trống");
    		return false;
    	}
    	
    	if(errorName.equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(null, "Lỗi không được để trống (Không có lỗi để 'KHÔNG')");
    		return false;
    	}
    	
    	if(price.equalsIgnoreCase("")) {
    		JOptionPane.showMessageDialog(null, "Giá tiền không được để trống");
    		return false;
    	}
    	else if(Integer.parseInt(price)<0) {
    		JOptionPane.showMessageDialog(null, "Giá tiền không được âm");
    		return false;
    	}
    	
    	
    	return true;
    }
    
    private void txtContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContractActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContractActionPerformed

    private void txtWarrantyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarrantyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarrantyActionPerformed

    private void txtMotobikeIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMotobikeIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMotobikeIDActionPerformed

    private void txtPartNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPartNameActionPerformed

    private void txtEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
    	if(evt.getSource().equals(buttonSearch)) {
    		buttonAdd.setVisible(false);
    	   	buttonUpdate.setVisible(false);
    	   	buttonDelete.setText("HỦY");
			String text = JOptionPane.showInputDialog("Nhập dữ liệu cần tìm: ");
			try {
				data = war_DAO.searchWarranty(text);
				loadTable();
			
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			if(evt.getSource().equals(buttonDelete.getText().equalsIgnoreCase("HỦY"))) {
			buttonAdd.setVisible(true);
			buttonUpdate.setVisible(true);
			buttonDelete.setText("XÓA");
			try {
				updateData();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	       }
       }
    }//GEN-LAST:event_buttonSearchActionPerformed
    
    // Ẩn hiện các nút Update, Delete khi click nút Lưu + Thêm dữ liệu
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) throws SQLException {//GEN-FIRST:event_buttonAddActionPerformed
    	
	if(buttonAdd.getText().equalsIgnoreCase("Lưu")) {
		if(validData()) {
			Warranty w = new Warranty(txtWarranty.getText(), txtContract.getText(), txtMotobikeID.getText(), txtEmployee.getText(), 
	    			LocalDate.parse(txtWarrantyDate.getText(), DateTimeFormatter.ofPattern("d-M-yyyy")), txtPartName.getText(),txtErroName.getText(), Double.parseDouble(txtMoney.getText()));
	    			
			 war_DAO.addWarranty(w);
			 updateData();
		}
	}
        else {
	        buttonSearch.setVisible(false);
	        buttonUpdate.setVisible(false);
			buttonAdd.setText("LƯU");
			buttonDelete.setText("HỦY");
			enableTextField();
        }
    	buttonAdd.setText("LƯU");
    	buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-save-20.png")));
    	buttonDelete.setText("HỦY");
    	buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close_icon.png")));
    	buttonSearch.setVisible(false);
    	buttonUpdate.setVisible(false);
    	
    	
//    	Header.remove(buttonUpdate);
//    	Header.remove(buttonSearch);
//    	Header.revalidate();
//    	Header.repaint();
    }//GEN-LAST:event_buttonAddActionPerformed
    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt)  {                                            
    	if (evt.getSource().equals(buttonDelete)) { 
            if (buttonDelete.getText().equalsIgnoreCase("HỦY")){
                buttonUpdate.setText("SỬA");
                buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-done-20.png")));
                buttonDelete.setText("XÓA RỖNG");
                buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close_icon.png")));
                buttonAdd.setVisible(true);
                buttonSearch.setVisible(true);

                txtWarranty.setEditable(false);
                txtContract.setEditable(false);
                txtEmployee.setEditable(false);
                txtMotobikeID.setEditable(false);
                txtWarrantyDate.setEditable(false);
                //background
                txtWarranty.setBackground(Color.getHSBColor(0f, 0f,0.79f));
                txtContract.setBackground(Color.getHSBColor(0f, 0f,0.79f));
                txtEmployee.setBackground(Color.getHSBColor(0f, 0f,0.79f));
                txtMotobikeID.setBackground(Color.getHSBColor(0f, 0f,0.79f));
                txtWarrantyDate.setBackground(Color.getHSBColor(0f, 0f,0.79f));
               
		        buttonAdd.setText("THÊM");
				buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-50 (2) (2).png")));
				buttonDelete.setText("XÓA RỖNG");
				buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-delete-20.png")));
				buttonSearch.setVisible(true);
		    	buttonUpdate.setVisible(true);
		    	disableTextField();
                try {
                    updateData();
                } catch (SQLException ex) {
                    Logger.getLogger(WarrantyGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else {
            	deleteTextField();
            	table.clearSelection();
            }
        }
	}                                            

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) throws NumberFormatException, SQLException {//GEN-FIRST:event_buttonUpdateActionPerformed
        if(evt.getSource().equals(buttonUpdate)) {
        	if(buttonUpdate.getText().equalsIgnoreCase("SỬA")) {
        		buttonUpdate.setText("OK");
                buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-done-20.png")));
                buttonDelete.setText("HỦY");
                buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close_icon.png")));
                buttonAdd.setVisible(false);
                buttonSearch.setVisible(false);
                
            	txtPartName.setEnabled(true);
            	txtErroName.setEnabled(true);
            	txtMoney.setEnabled(true);
            	txtPartName.setBackground(Color.WHITE);
            	txtErroName.setBackground(Color.WHITE);
            	txtMoney.setBackground(Color.WHITE);
        	}
        	else if(buttonUpdate.getText().equalsIgnoreCase("OK")) {
        		if(validData()) {
        			war_DAO.updateWarranty(Integer.parseInt(txtWarranty.getText()), txtPartName.getText(), txtErroName.getText(), txtMoney.getText());
            		updateData();
        		}
        	}
        }
    	
        
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void txtMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoneyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMoneyActionPerformed

    private void txtWarrantyDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWarrantyDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWarrantyDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Header;
    private javax.swing.JPanel Main;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel labelContract;
    private javax.swing.JLabel labelCustomerID;
    private javax.swing.JLabel labelEmployee;
    private javax.swing.JLabel labelErroName;
    private javax.swing.JLabel labelMoney;
    private javax.swing.JLabel labelMotobikeID;
    private javax.swing.JLabel labelPartName;
    private javax.swing.JLabel labelWarrantyDate;
    private javax.swing.JPanel panelContract;
    private javax.swing.JPanel panelEmployee;
    private javax.swing.JPanel panelErroName;
    private javax.swing.JPanel panelMoney;
    private javax.swing.JPanel panelMotobikeID;
    private javax.swing.JPanel panelPartName;
    private javax.swing.JPanel panelWarranty;
    private javax.swing.JPanel panelWarrantyDate;
    private javax.swing.JScrollPane scrollTable;
    private rojeru_san.complementos.RSTableMetro table;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtContract;
    private javax.swing.JTextField txtEmployee;
    private javax.swing.JTextArea txtErroName;
    private javax.swing.JTextField txtMoney;
    private javax.swing.JTextField txtMotobikeID;
    private javax.swing.JTextField txtPartName;
    public javax.swing.JTextField txtWarranty;
    private javax.swing.JTextField txtWarrantyDate;
    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;
    private ArrayList<Warranty> data = new ArrayList<>();
    private Warranty_DAO war_DAO = new Warranty_DAO();
    private int count = war_DAO.getID();
    
    
    
    public class RoundJTextField extends JTextField {
    private Shape shape;
    public RoundJTextField(int size) {
        super(size);
        setOpaque(false); // As suggested by @AVD in comment.
    }
    protected void paintComponent(Graphics g) {
         g.setColor(getBackground());
         g.fillRoundRect(0, 0, getWidth()-1, getHeight()-1, 15, 15);
         super.paintComponent(g);
    }
    protected void paintBorder(Graphics g) {
         g.setColor(Color.BLACK);
         g.drawRoundRect(0, 0, getWidth()-1, getHeight()-1, 15, 15);
    }
    public boolean contains(int x, int y) {
         if (shape == null || !shape.getBounds().equals(getBounds())) {
             shape = new RoundRectangle2D.Float(0, 0, getWidth()-1, getHeight()-1, 15, 15);
         }
         return shape.contains(x, y);
    }
}
    
    public class RoundBorderArea implements Border {

        private int radius;

        public RoundBorderArea(int radius) {
            this.radius = radius;
        }

        public int getRadius() {
            return radius;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            Graphics2D g2d = (Graphics2D) g.create();
            g2d.draw(new RoundRectangle2D.Double(x, y, width - 1, height - 1, getRadius(), getRadius()));
            g2d.dispose();
        }

        @Override
        public Insets getBorderInsets(Component c) {
            int value = getRadius() / 2;
            return new Insets(value, value, value, value);
        }

        @Override
        public boolean isBorderOpaque() {
            return false;
        }

    }

	@Override
	public void mouseClicked(MouseEvent e) {
		Object o = e.getSource();
		if(o.equals(table)) {
			txtWarranty.setText(table.getValueAt(table.getSelectedRow(), 0).toString());
			txtContract.setText(table.getValueAt(table.getSelectedRow(), 1).toString());
			txtMotobikeID.setText(table.getValueAt(table.getSelectedRow(), 2).toString());
			txtEmployee.setText(table.getValueAt(table.getSelectedRow(), 3).toString());
			txtWarrantyDate.setText(table.getValueAt(table.getSelectedRow(), 4).toString());
			txtPartName.setText(table.getValueAt(table.getSelectedRow(), 5).toString());
			txtErroName.setText(table.getValueAt(table.getSelectedRow(), 6).toString());
			txtMoney.setText(table.getValueAt(table.getSelectedRow(), 7).toString());
		}
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
    
}