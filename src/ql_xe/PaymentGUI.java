/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ql_xe;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Shape;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.geom.RoundRectangle2D;
import java.sql.SQLException;
import java.text.Format;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

import dao.Payment_DAO;
import entity.Motobike;
import entity.Payment;

/**
 *
 * @author Admin
 */
public class PaymentGUI extends javax.swing.JPanel implements ActionListener,MouseListener{

    /**
     * Creates new form ..
     * @throws SQLException 
     */
    public PaymentGUI() throws SQLException {
        initComponents();       
        loadData();
        disableTextField();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        Header = new javax.swing.JPanel();
        panelPaymentID = new javax.swing.JPanel();
        txtPaymentID = new RoundJTextField(30);
        labelPaymentID = new javax.swing.JLabel();
        panelContractID = new javax.swing.JPanel();
        txtContractID = new RoundJTextField(30);
        labelContractID = new javax.swing.JLabel();
        panelPayDay = new javax.swing.JPanel();
        txtPayDay = new RoundJTextField(30);
        labelPayDay = new javax.swing.JLabel();
        panelMoney = new javax.swing.JPanel();
        txtMoney = new RoundJTextField(30);
        labelMoney = new javax.swing.JLabel();
        pabelCustomerID = new javax.swing.JPanel();
        txtCustomerID = new RoundJTextField(30);
        labelCustomerID = new javax.swing.JLabel();
        panelPayer = new javax.swing.JPanel();
        txtlPayer = new RoundJTextField(30);
        labellPayer = new javax.swing.JLabel();
        buttonDelete = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonSearch = new javax.swing.JButton();
        buttonAdd1 = new javax.swing.JButton();
        scrollTable = new javax.swing.JScrollPane();
        table = new rojeru_san.complementos.RSTableMetro();

        //event 
        table.addMouseListener(this);
        buttonAdd1.addActionListener(this);
        buttonUpdate.addActionListener(this);
        buttonDelete.addActionListener(this);
        buttonSearch.addActionListener(this);
        
        
        setPreferredSize(new java.awt.Dimension(1580, 770));

        Main.setBackground(new java.awt.Color(255, 255, 255));
        Main.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        title.setForeground(new java.awt.Color(0, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("PHIẾU THU");
        Main.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1580, 60));

        Header.setBackground(new java.awt.Color(255, 255, 255));
        Header.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Thông tin ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dubai Medium", 1, 24), new java.awt.Color(0, 0, 0))); // NOI18N
        Header.setPreferredSize(new java.awt.Dimension(1580, 770));
        Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelPaymentID.setBackground(new java.awt.Color(255, 255, 255));
        panelPaymentID.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPaymentID.setBackground(new java.awt.Color(255, 255, 255));
        txtPaymentID.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtPaymentID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPaymentID.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        panelPaymentID.add(txtPaymentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 270, 30));

        labelPaymentID.setBackground(new java.awt.Color(255, 255, 255));
        labelPaymentID.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelPaymentID.setForeground(new java.awt.Color(0, 0, 0));
        labelPaymentID.setText("Mã Thanh Toán:");
        panelPaymentID.add(labelPaymentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 30));

        Header.add(panelPaymentID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 520, 40));

        panelContractID.setBackground(new java.awt.Color(255, 255, 255));
        panelContractID.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtContractID.setBackground(new java.awt.Color(255, 255, 255));
        txtContractID.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtContractID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtContractID.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        panelContractID.add(txtContractID, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 270, 30));

        labelContractID.setBackground(new java.awt.Color(255, 255, 255));
        labelContractID.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelContractID.setForeground(new java.awt.Color(0, 0, 0));
        labelContractID.setText("Mã Hợp Đồng:");
        panelContractID.add(labelContractID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 30));

        Header.add(panelContractID, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 520, 40));

        panelPayDay.setBackground(new java.awt.Color(255, 255, 255));
        panelPayDay.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPayDay.setBackground(new java.awt.Color(255, 255, 255));
        txtPayDay.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtPayDay.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtPayDay.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        panelPayDay.add(txtPayDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 270, 30));

        labelPayDay.setBackground(new java.awt.Color(255, 255, 255));
        labelPayDay.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelPayDay.setForeground(new java.awt.Color(0, 0, 0));
        labelPayDay.setText("Ngày Trả:");
        panelPayDay.add(labelPayDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 30));

        Header.add(panelPayDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 520, 40));

        panelMoney.setBackground(new java.awt.Color(255, 255, 255));
        panelMoney.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtMoney.setBackground(new java.awt.Color(255, 255, 255));
        txtMoney.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtMoney.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtMoney.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        panelMoney.add(txtMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelMoney.setBackground(new java.awt.Color(255, 255, 255));
        labelMoney.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelMoney.setForeground(new java.awt.Color(0, 0, 0));
        labelMoney.setText("Số Tiền:");
        panelMoney.add(labelMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 30));

        Header.add(panelMoney, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 80, 480, 40));

        pabelCustomerID.setBackground(new java.awt.Color(255, 255, 255));
        pabelCustomerID.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCustomerID.setBackground(new java.awt.Color(255, 255, 255));
        txtCustomerID.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtCustomerID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtCustomerID.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        pabelCustomerID.add(txtCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labelCustomerID.setBackground(new java.awt.Color(255, 255, 255));
        labelCustomerID.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labelCustomerID.setForeground(new java.awt.Color(0, 0, 0));
        labelCustomerID.setText("Mã Nhân Viên:");
        pabelCustomerID.add(labelCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 30));

        Header.add(pabelCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 120, 480, 40));

        panelPayer.setBackground(new java.awt.Color(255, 255, 255));
        panelPayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtlPayer.setBackground(new java.awt.Color(255, 255, 255));
        txtlPayer.setFont(new java.awt.Font("Bahnschrift", 1, 18)); // NOI18N
        txtlPayer.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtlPayer.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        panelPayer.add(txtlPayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 270, 30));

        labellPayer.setBackground(new java.awt.Color(255, 255, 255));
        labellPayer.setFont(new java.awt.Font("Leelawadee UI", 1, 18)); // NOI18N
        labellPayer.setForeground(new java.awt.Color(0, 0, 0));
        labellPayer.setText("Người Trả:");
        panelPayer.add(labellPayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 150, 30));

        Header.add(panelPayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 160, 480, 40));

        buttonDelete.setBackground(new java.awt.Color(255, 255, 255));
        buttonDelete.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonDelete.setForeground(new java.awt.Color(0, 0, 0));
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-delete-20.png"))); // NOI18N
        buttonDelete.setText("XÓA");
        buttonDelete.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonDelete.setIconTextGap(15);
        Header.add(buttonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 90, 140, 40));

        buttonUpdate.setBackground(new java.awt.Color(255, 255, 255));
        buttonUpdate.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonUpdate.setForeground(new java.awt.Color(0, 0, 0));
        buttonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-write-20.png"))); // NOI18N
        buttonUpdate.setText("SỬA");
        buttonUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonUpdate.setIconTextGap(15);
        Header.add(buttonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 140, 140, 40));

        buttonSearch.setBackground(new java.awt.Color(255, 255, 255));
        buttonSearch.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonSearch.setForeground(new java.awt.Color(0, 0, 0));
        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-search-20.png"))); // NOI18N
        buttonSearch.setText("TÌM");
        buttonSearch.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonSearch.setIconTextGap(15);
        Header.add(buttonSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 190, 140, 40));

        buttonAdd1.setBackground(new java.awt.Color(255, 255, 255));
        buttonAdd1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        buttonAdd1.setForeground(new java.awt.Color(0, 0, 0));
        buttonAdd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-50 (2) (2).png"))); // NOI18N
        buttonAdd1.setText("THÊM");
        buttonAdd1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        buttonAdd1.setIconTextGap(15);
        Header.add(buttonAdd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 40, 140, 40));

        Main.add(Header, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 1560, 251));

        scrollTable.setBackground(new java.awt.Color(255, 255, 255));
        scrollTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        table.setBackground(new java.awt.Color(255, 255, 255));
        table.setBorder(new javax.swing.border.MatteBorder(null));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ád", "ád", "ád", "ád"},
                {"áđá", "ád", "ád", "ád"},
                {"áđá", "d", "ád", "áđá"},
                {"áđá", "áđá", "áđá", "ád"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setColorBackgoundHead(new java.awt.Color(102, 102, 102));
        table.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        table.setColorBordeHead(new java.awt.Color(255, 255, 255));
        table.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        table.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        table.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        table.setColorSelBackgound(new java.awt.Color(51, 51, 51));
        table.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        table.setFuenteFilas(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        table.setFuenteHead(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        table.setGridColor(new java.awt.Color(0, 0, 0));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(255, 255, 255));
        table.setShowGrid(false);
        table.setShowVerticalLines(true);
        table.setSurrendersFocusOnKeystroke(true);
        table.getTableHeader().setReorderingAllowed(false);
        scrollTable.setViewportView(table);
        model = new DefaultTableModel(new String[] {"Mã Thanh Toán", "Mã Hợp Đồng", "Ngày Trả", "Số Tiền", "Mã Nhân Viên", "Người Trả"},0);

        table.setModel(model);

        Main.add(scrollTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 1560, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Main, javax.swing.GroupLayout.PREFERRED_SIZE, 1584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        //Event
        
        
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Header;
    private javax.swing.JPanel Main;
    private javax.swing.JButton buttonAdd1;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel labelContractID;
    private javax.swing.JLabel labelCustomerID;
    private javax.swing.JLabel labelMoney;
    private javax.swing.JLabel labelPayDay;
    private javax.swing.JLabel labelPaymentID;
    private javax.swing.JLabel labellPayer;
    private javax.swing.JPanel pabelCustomerID;
    private javax.swing.JPanel panelContractID;
    private javax.swing.JPanel panelMoney;
    private javax.swing.JPanel panelPayDay;
    private javax.swing.JPanel panelPayer;
    private javax.swing.JPanel panelPaymentID;
    private javax.swing.JScrollPane scrollTable;
    private rojeru_san.complementos.RSTableMetro table;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtContractID;
    private javax.swing.JTextField txtCustomerID;
    private javax.swing.JTextField txtMoney;
    private javax.swing.JTextField txtPayDay;
    private javax.swing.JTextField txtPaymentID;
    private javax.swing.JTextField txtlPayer;

    // End of variables declaration//GEN-END:variables
    private DefaultTableModel model;
    private ArrayList<Payment> list;
    private dao.Payment_DAO payment_Dao;

	



	public class RoundJTextField extends JTextField {
    private Shape shape;
    public RoundJTextField(int size) {
        super(size);
        setOpaque(false); // As suggested by @AVD in comment.
    }
    protected void paintComponent(Graphics g) {
         g.setColor(getBackground());
         g.fillRoundRect(0, 0, getWidth()-1, getHeight()-1, 15, 15);
         super.paintComponent(g);
    }
    

    
    protected void paintBorder(Graphics g) {
         g.setColor(Color.BLACK);
         g.drawRoundRect(0, 0, getWidth()-1, getHeight()-1, 15, 15);
    }
    public boolean contains(int x, int y) {
         if (shape == null || !shape.getBounds().equals(getBounds())) {
             shape = new RoundRectangle2D.Float(0, 0, getWidth()-1, getHeight()-1, 15, 15);
         }
         return shape.contains(x, y);
    }
}

	public javax.swing.JPanel getMain() {
		return Main;
	}

	public void setMain(javax.swing.JPanel main) {
		Main = main;
	}
	
    private void loadData() throws SQLException {
    	list = new ArrayList<>();
    	payment_Dao = new Payment_DAO();
    	list = payment_Dao.getAllPayment();
    	for(Payment tmp:list) {
    		String[] newRow = {
    			Integer.toString(tmp.getPaymentID()),
    			Integer.toString(tmp.getContractID()),
    			tmp.getPaymentDate().format(DateTimeFormatter.ofPattern("d-M-yyyy")),
    			String.format("%.3f", tmp.getMoneyPay()),
    			tmp.getPersionTake(),
    			tmp.getPersionGive()  			
    		};
    		model.addRow(newRow);
    	}
    }
    

    
    private void setNullTextField() {
    	txtCustomerID.setText("");
    	txtlPayer.setText("");
    	txtMoney.setText("");
    	txtPayDay.setText("");
    	txtContractID.setText("");    
    	txtPaymentID.setText("");
    }
    
    private void disableTextField() {
    	txtCustomerID.setEnabled(false);
    	txtlPayer.setEnabled(false);
    	txtMoney.setEnabled(false);
    	txtPayDay.setEnabled(false);
    	txtContractID.setEnabled(false);    
    	txtPaymentID.setEnabled(false);
      
      
      txtlPayer.setBackground(Color.getHSBColor(0f, 0f,0.79f));
      txtCustomerID.setBackground(Color.getHSBColor(0f, 0f,0.79f));
      txtMoney.setBackground(Color.getHSBColor(0f, 0f,0.79f));
      txtPayDay.setBackground(Color.getHSBColor(0f, 0f,0.79f));
      txtContractID.setBackground(Color.getHSBColor(0f, 0f,0.79f));
      txtPaymentID.setBackground(Color.getHSBColor(0f, 0f,0.79f));
    }

    
    private void enableTextField() {
    	txtCustomerID.setEnabled(true);
    	txtlPayer.setEnabled(true);
    	txtMoney.setEnabled(true);
    	txtPayDay.setEnabled(true);
    	txtContractID.setEnabled(true);    
//    	txtPaymentID.setEnabled(true);
      
      
      txtlPayer.setBackground(Color.white);
      txtCustomerID.setBackground(Color.white);
      txtMoney.setBackground(Color.white);
      txtPayDay.setBackground(Color.white);
      txtContractID.setBackground(Color.white);
      txtPaymentID.setBackground(Color.white);
    }
    
    private void updateData() throws SQLException {
    	model.setRowCount(0);
    	loadData();
    }
    
    public void btnCancel() {
    	buttonAdd1.setText("THÊM");
		buttonDelete.setText("XÓA");
		buttonUpdate.setText("SỬA");
		buttonUpdate.setVisible(true);
		buttonSearch.setVisible(true);
		buttonAdd1.setVisible(true);
		try {
			updateData();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		disableTextField();
    }
    
    private Payment checkValue() {
    	//check contract id
    	String regexContract = "^\\d{1,}$";
    	if(!txtContractID.getText().matches(regexContract)) {
    		JOptionPane.showMessageDialog(null, "MÃ HỢP ĐỒNG GỒM CHỮ SỐ VÀ ÍT NHẤT 1 SỐ");
			return null;
    	}
    	// check DATE
    	try {
			LocalDate.parse(txtPayDay.getText(),DateTimeFormatter.ofPattern("d-M-yyyy"));
		} catch (Exception e2) {
			JOptionPane.showMessageDialog(null, "NGÀY PHẢI THEO DẠNG d-M-yyyy");
			return null;
		}
    	// check money
    	try {
			Double.parseDouble(txtMoney.getText());
			if(Double.parseDouble(txtMoney.getText())<0) {
				JOptionPane.showMessageDialog(null, "TIỀN LÀ SỐ KHÔNG ÂM ");
				return null;
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, "TIỀN CHỈ NHẬP SỐ ");
			return null;
		}
    	// check ID EMLOY
    	String regex = "^\\d{6,}$";
    	if(!txtCustomerID.getText().matches(regex)) {
    		JOptionPane.showMessageDialog(null, "NHÂN VIÊN GỒM ÍT NHẤT 6 SỐ");
			return null;
    	}
    	//REGEX person give
    	String regexName = "^[A-Z][a-z]+(\\s[A-Z][a-z]+)+$";
    	if(!txtlPayer.getText().matches(regexName)) {
    		JOptionPane.showMessageDialog(null, "HỌ TÊN NGƯỜI TRẢ CẦN VIẾT HOA CHỮ ĐẦU VÀ GỒM ÍT NHẤT 2 TỪ");
			return null;
    	}
    	
    	
    	Payment tmpPay = new Payment(Integer.parseInt(txtPaymentID.getText()),Integer.parseInt(txtContractID.getText()),
				LocalDate.parse(txtPayDay.getText(),DateTimeFormatter.ofPattern("d-M-yyyy")),
				Double.parseDouble(txtMoney.getText()),
				txtCustomerID.getText(),txtlPayer.getText());
    	return tmpPay;
    }
	

	@Override
	public void actionPerformed(ActionEvent e) {
		Object o = e.getSource();
		if(o.equals(buttonAdd1)) {
			if(buttonAdd1.getText().equalsIgnoreCase("THÊM")) {
				buttonAdd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-save-20.png")));
				payment_Dao = new Payment_DAO();
				int tmpID = 0;
				try {
					 tmpID = payment_Dao.maxID().getPaymentID();
				} catch (SQLException e1) {
					e1.printStackTrace();
				}
				txtPaymentID.setText(Integer.toString(tmpID+1));
				enableTextField();
				buttonAdd1.setText("LƯU");
				buttonDelete.setText("HỦY");
				buttonUpdate.setVisible(false);
				buttonSearch.setVisible(false);
			}
			else if(buttonAdd1.getText().equalsIgnoreCase("LƯU")) {
				
				if(checkValue()!=null) {
					Payment tmpPay = checkValue();
					payment_Dao = new Payment_DAO();
					try {
						payment_Dao.addPayment(tmpPay);
						updateData();
					} catch (SQLException e1) {
						
						e1.printStackTrace();
					}
				}
				else {
					
					JOptionPane.showMessageDialog(null, "THÊM THẤT BẠI");
				}
				
				
			}
			
		}
		
		if(o.equals(buttonSearch)) {
			buttonAdd1.setVisible(false);
			buttonDelete.setText("HỦY");
			buttonUpdate.setVisible(false);
			list = new ArrayList<>();
			String word = JOptionPane.showInputDialog("TỪ CẦN TÌM");
			try {
				list = payment_Dao.search(word);
		    	if(list.isEmpty()) {
		    		JOptionPane.showMessageDialog(null, "KHÔNG TÌM THẤY");
		    	}
		    	else {
		    		model.setRowCount(0);
		    		for(Payment tmp:list) {
			    		String[] newRow = {
			    			Integer.toString(tmp.getPaymentID()),
			    			Integer.toString(tmp.getContractID()),
			    			tmp.getPaymentDate().format(DateTimeFormatter.ofPattern("d-M-yyyy")),
			    			String.format("%.3f", tmp.getMoneyPay()),
			    			tmp.getPersionTake(),
			    			tmp.getPersionGive()  			
			    		};
			    		model.addRow(newRow);
			    	}
		    	}
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
		}
		
		if(o.equals(buttonDelete)) {
			if(buttonDelete.getText().equalsIgnoreCase("XÓA")) {
				setNullTextField();
			}
			else if(buttonDelete.getText().equalsIgnoreCase("HỦY")) {
				buttonAdd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add-50 (2) (2).png")));
				btnCancel();
				
				
				
			}
		}
		if(o.equals(buttonUpdate)) { //update
			if(buttonUpdate.getText().equals("SỬA")) {
				if(table.getSelectedRow()==-1) {
					JOptionPane.showMessageDialog(null, "CHỌN DÒNG CẦN SỬA");
				}
				else {
					buttonDelete.setText("HỦY");
					buttonSearch.setVisible(false);
					buttonAdd1.setVisible(false);
					buttonUpdate.setText("OKE");
					enableTextField();
				}
			}
			else if(buttonUpdate.getText().equalsIgnoreCase("OKE")){
				if(checkValue()!=null) {
					Payment tmpPay = checkValue();
					payment_Dao = new Payment_DAO();
					try {
						payment_Dao.update(tmpPay);
						updateData();
						btnCancel();
					} catch (SQLException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					buttonUpdate.setText("SỬA");
					disableTextField();
				}else {
					JOptionPane.showMessageDialog(null,"CẬP NHẬT THẤT BẠI");
				}
				
			}
		}
		
	}
	
	@Override
	public void mouseClicked(MouseEvent e) {
		Object o = e.getSource();
		if(o.equals(table)) {
			if(!buttonAdd1.getText().equalsIgnoreCase("LƯU")) {
				txtContractID.setText(table.getValueAt(table.getSelectedRow(), 1).toString());
				txtPaymentID.setText(table.getValueAt(table.getSelectedRow(), 0).toString());
				txtPayDay.setText(table.getValueAt(table.getSelectedRow(), 2).toString());
				txtMoney.setText(table.getValueAt(table.getSelectedRow(), 3).toString());
				txtCustomerID.setText(table.getValueAt(table.getSelectedRow(), 4).toString());
				txtlPayer.setText(table.getValueAt(table.getSelectedRow(), 5).toString());
			}
		}
		
	}

	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
    
	
}
